# vim:foldmethod=marker:foldlevel=0:
# This is the firewall configuration for aiur's hypervisor host
# It configures rules for a generic stateful firewall and an additional two
# virtual network interfaces:
#
# `qemu0`: 10.2.0.0/24 - Subnet for all guest virtual machines with NAT.
# `priv0`: 10.2.1.0/24 - Subnet for guests with no internet connectivity.
#
# It is currently IPv4 only.
# It requires the appropriate DHCP configuration to work properly.
#
# The firewall should be good for most workstation needs:
#   - Denies all by default
#   - Allows ping through
#   - Allows HTTP/HTTPS through to the host
#   - Allows NAT for the qemu0 subnet.
#   - Allows host-guest communication through priv0
#   - Allows all guests in the qemu0 network to communicate with each other.
#   - Two standalone chains, TCP and UDP to make it easier to manage open ports
#
*filter
:INPUT   DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT  ACCEPT [0:0]
:TCP - [0:0]
:UDP - [0:0]
# Basic Rules {{{
# Allow inbound established traffic
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# Allow loopback traffic
-A INPUT -i lo -j ACCEPT
# Allow ping
-A INPUT -p icmp -m icmp --icmp-type 8 -m conntrack --ctstate NEW -j ACCEPT
# Process new TCP and UDP connections
-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -j TCP
-A INPUT -p udp -m conntrack --ctstate NEW -j UDP
# }}}
# qemu0 Hypervisor {{{
# Accept DHCP and DNS traffic
-A INPUT -i qemu0 -p udp -m udp -m multiport --dports 53,67 -j ACCEPT
-A INPUT -i qemu0 -p tcp -m tcp -m multiport --dports 53,67 -j ACCEPT

# Allow established traffic for the hypervisor subnet
#-A FORWARD -d 10.2.0.0/24 -o qemu0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# -- OR --
# Allow any forwarded traffic through (enables port forwarding)
-A FORWARD -d 10.2.0.0/24 -o qemu0 -j ACCEPT

# Allow outbound traffic from the hypervisor subnet
-A FORWARD -s 10.2.0.0/24 -i qemu0 -j ACCEPT
# Allow all traffic within the subnet through
-A FORWARD -i qemu0 -o qemu0 -j ACCEPT
# Reject everything else with ICMP unreachable
-A FORWARD -i qemu0 -j REJECT --reject-with icmp-port-unreachable
-A FORWARD -o qemu0 -j REJECT --reject-with icmp-port-unreachable
# }}}
# priv0 private subnet {{{
# Allow private network hosts to communicate
-A FORWARD -i priv0 -o priv0 -j ACCEPT
# Deny any traffic to/from priv0
-A FORWARD -i priv0 -j REJECT --reject-with icmp-port-unreachable
-A FORWARD -o priv0 -j REJECT --reject-with icmp-port-unreachable
# }}}
# DEFAULT: Drop Everything Else {{{
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -p tcp -m tcp -j REJECT --reject-with tcp-reset
-A INPUT -j REJECT --reject-with icmp-port-unreachable
# }}}
# OPEN TCP PORTS {{{
# NOTE: These ports will be open on all interfaces (including qemu0) unless
#       -i or -s are specified. Be aware of that if running malware in guests.
# -A TCP -p tcp -m tcp --dport 22 -j ACCEPT  # SSH
-A TCP -p tcp -m tcp --dport 80 -j ACCEPT
-A TCP -p tcp -m tcp --dport 443 -j ACCEPT
-A TCP -p tcp -m tcp --dport 4713 -i qemu0  -j ACCEPT
# -A TCP -p tcp -m tcp ! -s 10.2.0.0/24 --dport 22 # Allow SSH from anywhere except guests in qemu0
# }}}
# OPEN UDP PORTS {{{
# -A UDP -p udp -m udp --dport 60000 -j ACCEPT
# }}}

COMMIT
*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# NAT for qemu0 {{{
-A POSTROUTING -s 10.2.0.0/24 -d 224.0.0.0/24 -j RETURN
-A POSTROUTING -s 10.2.0.0/24 -d 255.255.255.255/32 -j RETURN
-A POSTROUTING -s 10.2.0.0/24 ! -d 10.2.0.0/24 -p tcp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 10.2.0.0/24 ! -d 10.2.0.0/24 -p udp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s 10.2.0.0/24 ! -d 10.2.0.0/24 -j MASQUERADE
# }}}
# PORT FORWARDING {{{
# NOTE: Requires matching forward rules in FILTER table.
# - 80/tcp on any to 10.2.0.193:8080 (qemu0)
# -A PREROUTING ! -s 10.2.0.0/24 -p tcp --dport 80 -j DNAT --to 10.2.0.193:8080
# }}}
COMMIT

*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# BUG: DHCP packets sent to virtual machines don't have checksums
-A POSTROUTING -o qemu0 -p udp -m udp --dport 68 -j CHECKSUM --checksum-fill
COMMIT
