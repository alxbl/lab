apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aquisition.fullname" . }}
  labels:
    {{- include "aquisition.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "aquisition.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aquisition.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aquisition.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: gluetun
          image: qmcgaw/gluetun
          restartPolicy: Always
          volumeMounts:
            - name: tun-device
              mountPath: /dev/net/tun
              readOnly: true
            - name: scratch
              mountPath: /gluetun
            - name: firewall-rules
              mountPath: /iptables/post-rules.txt
              subPath: post-rules.txt
          {{- if .Values.vpn.socks.enabled }}
          ports:
          - name: socks
            containerPort: 8388
          {{- end }}
          securityContext:
            privileged: true # FIXME: SELinux
            capabilities:
              add: ["NET_ADMIN"]
          envFrom:
            - configMapRef:
                name: vpn-config
                optional: false
            - secretRef:
                name: {{ .Values.vpn.credentialsSecretRef | quote }}
                optional: false
      containers:
        # PostgresQL can be configured via environment: Sonarr:Postgres
        - name: sonarr
          image: ghcr.io/alxbl/sonarr:{{ .Values.images.sonarr | default "latest"}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: TZ
              value: {{ .Values.vpn.timezone | default "Etc/UTC" | quote}}
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - name: http
              containerPort: 8989
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /media
        - name: radarr
          image: ghcr.io/alxbl/radarr:{{ .Values.images.radarr | default "latest"}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: TZ
              value: {{ .Values.vpn.timezone | default "Etc/UTC" | quote}}
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - name: http
              containerPort: 7878
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /media
        - name: readarr
          image: ghcr.io/alxbl/readarr:{{ .Values.images.readarr | default "latest"}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: TZ
              value: {{ .Values.vpn.timezone | default "Etc/UTC" | quote}}
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - name: http
              containerPort: 8787
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /media
        - name: lidarr
          image: ghcr.io/alxbl/lidarr:{{ .Values.images.lidarr | default "latest"}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: TZ
              value: {{ .Values.vpn.timezone | default "Etc/UTC" | quote}}
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - name: http
              containerPort: 8686
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /media
        - name: prowlarr
          image: ghcr.io/alxbl/prowlarr:{{ .Values.images.prowlarr | default "latest"}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: TZ
              value: {{ .Values.vpn.timezone | default "Etc/UTC" | quote}}
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          ports:
            - name: http
              containerPort: 9696
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /media
        - name: qbt
          image: ghcr.io/alxbl/qbt:{{ .Values.images.qbt | default "latest"}}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            - name: TZ
              value: {{ .Values.vpn.timezone | default "Etc/UTC" | quote}}
            - name: QBT_WEBUI_PORT
              value: "8080"
            - name: QBT_WEBUI_PASSWORD_HASH
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.qbt.webuiPasswordHashSecretRef }}
                  key: QBT_WEBUI_PASSWORD_HASH
            - name: QBT_CONFIG_DIR
              value: {{ .Values.qbt.configDir | quote }}
            - name: QBT_DOWNLOAD_DIR
              value: {{ .Values.qbt.downloadDir | quote }}
            - name: QBT_CONFIG_SOURCE
              value: /opt/qBittorrent.conf
          ports:
            - name: webui
              containerPort: 8080
              protocol: TCP
            - name: peer
              containerPort: 6881
              protocol: TCP
            - name: peer-udp
              containerPort: 6881
              protocol: UDP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /media    
            - name: qbt-config
              mountPath: /opt/qBittorrent.conf
              subPath: qBittorrent.conf
      volumes:
        - name: tun-device
          hostPath:
            path: /dev/net/tun
        - name: scratch
          emptyDir:
        - name: media
          persistentVolumeClaim:
            claimName: {{ .Values.storage.name | quote }}
        - name: firewall-rules
          configMap:
            name: vpn-firewall
            items:
              - key: post-rules.txt
                path: post-rules.txt
        - name: qbt-config
          configMap:
            name: qbt-config
            items:
              - key: qBittorrent.conf
                path: qBittorrent.conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
