# This chart requires Kubernetes 1.29 and higher, because it makes use of SideCar containers to prevent
# VPN leaks.

# There should normally not be more than one in the cluster to avoid duplicate work and VPN connections.
replicaCount: 1

imagePullSecrets:
# Override the image version for various components
# leave empty to pull latest
images:
  sonarr: ""
  radarr: ""
  prowlarr: ""
  lidarr: ""
  gluetun: ""
  qbt: ""

  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

podAnnotations:
  # Do not proxy shadowSOCKS traffic.
  traffic.sidecar.istio.io/excludeInboundPorts: "8388"
  
podLabels:
  # Disable istio-proxy in this pod
  sidecar.istio.io/inject: "false"


podSecurityContext:
  fsGroup: 1000

# securityContext for all containers other than gluetun.
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Configure the aquisition client
qbt:
  downloadDir: /media/downloads
  configDir: /media/.config
  configFileSource: /opt/qBittorrent.conf
  maxSeedRatio: 3
  maxSeedTime: 20400 # minutes
  uploadLimit: 10000 # kb/s
  downloadLimit: 0 # kb/s

# Configure the VPN sidecar.
vpn:
  # This enables a SOCKS proxy to the pod for VPN.
  # When enabled, SHADOWSOCKS_PASSWORD is read from the VPN credentials secret
  # and used to encrypt shadowSOCKS traffic.
  socks:
    enabled: true
    cipher: AEAD
    type: ClusterIP
    port: 8388
  
  # Additional environment variables to add
  extra:
    PORT_FORWARD_ONLY: "on"
    VPN_PORT_FORWARDING: "on"
    # Only needed for Wireguard
    # VPN_PORT_FORWARDING_PROVIDER: "protonvpn"
  
  # Extra firewall rules. Each line is an invocation of `iptables`
  firewall:
  # This accepts local traffic destined for the ShadowSOCKS proxy.
  # Without this rule, shadow socks connections will timeout.
  - -A INPUT -s 10.0.0.0/16 -p tcp -m tcp --dport 8388 -j ACCEPT
  - -A INPUT -s 10.0.0.0/16 -p udp -m udp --dport 8388 -j ACCEPT

  # Tunnel all DNS queries through the VPN.
  # DANGER: Setting this to false will use the local/ambient
  #         DNS server, which will most likely leak DNS queries.
  #         Setting to `false` is NOT recommended.
  dns_over_vpn: true
  
  # VPN mode: openvpn or wireguard
  mode: "openvpn"
  # VPN provider (must be supported by gluetun)
  provider: "protonvpn"
  
  # The name of a secret containing the VPN credentials.
  # If the VPN mode is `openvpn`, the secret must contain two keys:
  #     OPENVPN_USER:     "your_openvpn_user"
  #     OPENVPN_PASSWORD: "your_openvpn_password"
  #
  # Otherwise, if Wireguard:
  #     WIREGUARD_PRIVATE_KEY: "your_wg_private_key"
  #     WIREGUARD_ADRESSES:    "your_wg_addresses"
  #
  # Refer to gluetun documentation for details.
  credentialsSecretRef: gluetun-vpn-credentials

  # List of comma separated countries to randomly VPN from when the sidecar starts.
  countries: "Netherlands"
  # Timezone (for logging)
  timezone: "Americas/Toronto"
  # Auto-update server list? This is performed over VPN
  # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
  updater:
    enabled: true
    period: "24h"

# If using PostgresQL, set it up here.
# database:
#   enabled: false
#   endpoint: namespace.postgres_svc.svc


# Configure the storage for the aquisition server.
# This will usually be a ReadWriteMany (RWX) storage which is shared with the actual media server. 
# Aquisition will write the data into this storage, and the media server will process/serve it.
storage:
  # The name of a PVC to bind. This PVC must exist or `create` must be true.
  name: media-server-pvc
  # Create the Volume Claim. If the claim is already provisioned or already exists, set to false.
  create: true
  # Size of the storage
  size: 1G
  # The storage class to use. "" for default. Recommended RWX volume so that media server and aquisition
  # can run on different nodes.
  storageClass: "zfs-rwx"
  accessMode: ReadWriteMany

# Standard Helm Boilerplate.
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
