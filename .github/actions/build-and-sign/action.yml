name: 'Build Signed Image'
description: 'Composite action to build, sign and push an image.'
inputs:
  registry:
    description: 'The registry where the image should be pushed'
    required: true
    default: ghcr.io
  image:
    description: 'The name of the image being built'
    required: true
  dockerfile:
    description: 'Path of the Dockerfile to build.'
    required: true
  context:
    description: 'Path of the docker context to use for build.'
    required: true
# outputs:
runs:
  using: "composite"
  steps:
    # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      uses: sigstore/cosign-installer@main

    # https://github.com/docker/setup-buildx-action
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

    # https://github.com/docker/metadata-action
    - name: "Extract metadata"
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      with:
        images: ${{ inputs.registry }}/${{ inputs.image }}
        tags: |
          type=raw,value=latest,enable={{is_default_branch}}
          type=schedule,pattern={{date 'YYYYMMDD'}}

    # https://github.com/docker/build-push-action
    - name: "Build and push"
      id: build-and-push
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      with:
        context: ${{ inputs.context }}
        push: true
        platforms: "linux/amd64"
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        file: ${{ inputs.dockerfile }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    # https://github.com/sigstore/cosign
    - name: "Sign images"
      env:
        # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
        TAGS: ${{ steps.meta.outputs.tags }}
        DIGEST: ${{ steps.build-and-push.outputs.digest }}
      # This step uses the identity token to provision an ephemeral certificate against the sigstore community Fulcio instance.
      run: |
        echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
      shell: bash